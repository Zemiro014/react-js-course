{"ast":null,"code":"var _jsxFileName = \"/home/kulandissa/Documents/ESTUDOS/udemy/reactjs/react-js-course/react_router_practice/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Max',\n  text: 'Learning React is fun 01!'\n}, {\n  id: 'q2',\n  author: 'Pedro',\n  text: 'Learning React is fun 02!'\n}, {\n  id: 'q3',\n  author: 'Jerónimo',\n  text: 'Learning React is fun 03!'\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: DUMMY_QUOTES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AllQuotes, \"TX91E3Ry29pOjGA3Az87eReX9Xs=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["useEffect","QuoteList","LoadingSpinner","useHttp","getAllQuotes","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"sources":["/home/kulandissa/Documents/ESTUDOS/udemy/reactjs/react-js-course/react_router_practice/src/pages/AllQuotes.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst DUMMY_QUOTES = [\n    { id: 'q1', author: 'Max', text: 'Learning React is fun 01!' },\n    { id: 'q2', author: 'Pedro', text: 'Learning React is fun 02!' },\n    { id: 'q3', author: 'Jerónimo', text: 'Learning React is fun 03!' },\n];\n\nconst AllQuotes = () => {\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\n\n    useEffect(() => {\n        sendRequest()\n    }, [sendRequest]);\n\n    if (status === 'pending') {\n        return (\n            <div className=\"centered\">\n                <LoadingSpinner />\n            </div>\n        )\n    }\n    return (\n        <>\n            <QuoteList quotes={DUMMY_QUOTES} />\n        </>\n    )\n}\nexport default AllQuotes;"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,MAAMC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,KAApB;EAA2BC,IAAI,EAAE;AAAjC,CADiB,EAEjB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,OAApB;EAA6BC,IAAI,EAAE;AAAnC,CAFiB,EAGjB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,UAApB;EAAgCC,IAAI,EAAE;AAAtC,CAHiB,CAArB;;AAMA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC,WAAF;IAAeC,MAAf;IAAuBC,IAAI,EAAEC,YAA7B;IAA2CC;EAA3C,IAAqDX,OAAO,CAACC,YAAD,EAAe,IAAf,CAAlE;EAEAJ,SAAS,CAAC,MAAM;IACZU,WAAW;EACd,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;EAIA,IAAIC,MAAM,KAAK,SAAf,EAA0B;IACtB,oBACI;MAAK,SAAS,EAAC,UAAf;MAAA,uBACI,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;EACD,oBACI;IAAA,uBACI,QAAC,SAAD;MAAW,MAAM,EAAEN;IAAnB;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAKH,CAnBD;;GAAMI,S;UACyDN,O;;;KADzDM,S;AAoBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}