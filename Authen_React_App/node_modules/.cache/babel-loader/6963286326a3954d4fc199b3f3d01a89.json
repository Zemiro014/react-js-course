{"ast":null,"code":"var _jsxFileName = \"/home/kulandissa/Documents/ESTUDOS/udemy/reactjs/react-js-course/Authen_React_App/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet LOGOUT_TIMER;\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n\n    if (LOGOUT_TIMER) {\n      clearTimeout(LOGOUT_TIMER);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    LOGOUT_TIMER = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","LOGOUT_TIMER","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","AuthContextProvider","props","initialToken","setToken","userIsLoggedIn","logoutHandler","removeItem","clearTimeout","loginHandler","setItem","remainingTime","setTimeout","contextValue","children"],"sources":["/home/kulandissa/Documents/ESTUDOS/udemy/reactjs/react-js-course/Authen_React_App/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nlet LOGOUT_TIMER;\n\nexport const AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    login: (token) => { },\n    logout: () => { }\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n    const currentTime = new Date().getTime();\n    const adjExpirationTime = new Date(expirationTime).getTime();\n\n    const remainingDuration = adjExpirationTime - currentTime;\n    return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n    const storedToken = localStorage.getItem('token');\n    const storedExpirationDate = localStorage.getItem('expirationTime')\n}\n\nexport const AuthContextProvider = (props) => {\n    const initialToken = localStorage.getItem('token')\n    const [token, setToken] = useState(initialToken);\n\n    const userIsLoggedIn = !!token;\n\n    const logoutHandler = () => {\n        setToken(null)\n        localStorage.removeItem('token')\n\n        if (LOGOUT_TIMER) {\n            clearTimeout(LOGOUT_TIMER);\n        }\n    };\n\n    const loginHandler = (token, expirationTime) => {\n        setToken(token)\n        localStorage.setItem('token', token)\n        localStorage.setItem('expirationTime', expirationTime)\n        const remainingTime = calculateRemainingTime(expirationTime)\n\n        LOGOUT_TIMER = setTimeout(logoutHandler, remainingTime)\n    };\n\n\n    const contextValue = {\n        token: token,\n        isLoggedIn: userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler,\n    }\n\n    return <AuthContext.Provider value={contextValue}>\n        {props.children}\n    </AuthContext.Provider>\n}\n\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAIC,YAAJ;AAEA,OAAO,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;EAC3CC,KAAK,EAAE,EADoC;EAE3CC,UAAU,EAAE,KAF+B;EAG3CC,KAAK,EAAGF,KAAD,IAAW,CAAG,CAHsB;EAI3CG,MAAM,EAAE,MAAM,CAAG;AAJ0B,CAApB,CAApB;;AAOP,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;EAC/C,MAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;EACA,MAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;EAEA,MAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;EACA,OAAOI,iBAAP;AACH,CAND;;AAQA,MAAMC,mBAAmB,GAAG,MAAM;EAC9B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;EACA,MAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AACH,CAHD;;AAKA,OAAO,MAAME,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC1C,MAAMC,YAAY,GAAGL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;EACA,MAAM,CAACd,KAAD,EAAQmB,QAAR,IAAoBvB,QAAQ,CAACsB,YAAD,CAAlC;EAEA,MAAME,cAAc,GAAG,CAAC,CAACpB,KAAzB;;EAEA,MAAMqB,aAAa,GAAG,MAAM;IACxBF,QAAQ,CAAC,IAAD,CAAR;IACAN,YAAY,CAACS,UAAb,CAAwB,OAAxB;;IAEA,IAAIzB,YAAJ,EAAkB;MACd0B,YAAY,CAAC1B,YAAD,CAAZ;IACH;EACJ,CAPD;;EASA,MAAM2B,YAAY,GAAG,CAACxB,KAAD,EAAQK,cAAR,KAA2B;IAC5Cc,QAAQ,CAACnB,KAAD,CAAR;IACAa,YAAY,CAACY,OAAb,CAAqB,OAArB,EAA8BzB,KAA9B;IACAa,YAAY,CAACY,OAAb,CAAqB,gBAArB,EAAuCpB,cAAvC;IACA,MAAMqB,aAAa,GAAGtB,sBAAsB,CAACC,cAAD,CAA5C;IAEAR,YAAY,GAAG8B,UAAU,CAACN,aAAD,EAAgBK,aAAhB,CAAzB;EACH,CAPD;;EAUA,MAAME,YAAY,GAAG;IACjB5B,KAAK,EAAEA,KADU;IAEjBC,UAAU,EAAEmB,cAFK;IAGjBlB,KAAK,EAAEsB,YAHU;IAIjBrB,MAAM,EAAEkB;EAJS,CAArB;EAOA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEO,YAA7B;IAAA,UACFX,KAAK,CAACY;EADJ;IAAA;IAAA;IAAA;EAAA,QAAP;AAGH,CAnCM;;GAAMb,mB;;KAAAA,mB;AAqCb,eAAelB,WAAf"},"metadata":{},"sourceType":"module"}