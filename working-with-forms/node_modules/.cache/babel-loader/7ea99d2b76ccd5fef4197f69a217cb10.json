{"ast":null,"code":"var _jsxFileName = \"/home/kulandissa/Documents/ESTUDOS/udemy/reactjs/react-js-course/working-with-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enterName, setEnterName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n\n  const nameInputChangeHandler = event => {\n    setEnterName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (enterName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    console.log(enterName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"cZxkeUU+htXjX+fkrYT/Me9R9U8=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","SimpleInput","props","nameInputRef","enterName","setEnterName","enteredNameIsValid","setEnteredNameIsValid","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","trim","console","log","enteredValue","current"],"sources":["/home/kulandissa/Documents/ESTUDOS/udemy/reactjs/react-js-course/working-with-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enterName, setEnterName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n\n  const nameInputChangeHandler = event => {\n    setEnterName(event.target.value);\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    if (enterName.trim() === '') {\n      setEnteredNameIsValid(false)\n      return;\n    }\n    console.log(enterName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n  }\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='form-control' >\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} type='text' id='name' onChange={nameInputChangeHandler} />\n        {!enteredNameIsValid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAMC,YAAY,GAAGJ,MAAM,EAA3B;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,IAAD,CAA5D;;EAEA,MAAMQ,sBAAsB,GAAGC,KAAK,IAAI;IACtCJ,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;EACD,CAFD;;EAIA,MAAMC,qBAAqB,GAAGH,KAAK,IAAI;IACrCA,KAAK,CAACI,cAAN;;IACA,IAAIT,SAAS,CAACU,IAAV,OAAqB,EAAzB,EAA6B;MAC3BP,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IACDQ,OAAO,CAACC,GAAR,CAAYZ,SAAZ;IACA,MAAMa,YAAY,GAAGd,YAAY,CAACe,OAAb,CAAqBP,KAA1C;IACAI,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACD,CATD;;EAUA,oBACE;IAAM,QAAQ,EAAEL,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,GAAG,EAAET,YAAZ;QAA0B,IAAI,EAAC,MAA/B;QAAsC,EAAE,EAAC,MAAzC;QAAgD,QAAQ,EAAEK;MAA1D;QAAA;QAAA;QAAA;MAAA,QAFF,EAGG,CAACF,kBAAD,iBAAuB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAH1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA/BD;;GAAML,W;;KAAAA,W;AAiCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}