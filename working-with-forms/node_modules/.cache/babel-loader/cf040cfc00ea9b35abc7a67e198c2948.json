{"ast":null,"code":"var _jsxFileName = \"/home/kulandissa/Documents/ESTUDOS/udemy/reactjs/react-js-course/working-with-forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetnameInput\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } // useEffect(() => {\n  //   if(enteredNameIsValid){\n  //     setFormisValid(true)\n  //   } else {\n  //     setFormisValid(false)\n  //   }\n  // }, [enteredNameIsValid]);\n\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmail) {\n      return;\n    }\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n    resetnameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-maeil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"089tqvfEUCPDnu8r8M/igQf7cEU=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetnameInput","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","emailInputChangeHandler","event","target","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/home/kulandissa/Documents/ESTUDOS/udemy/reactjs/react-js-course/working-with-forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetnameInput,\n  } = useInput(value => value.trim() !== '');\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  // useEffect(() => {\n  //   if(enteredNameIsValid){\n  //     setFormisValid(true)\n  //   } else {\n  //     setFormisValid(false)\n  //   }\n\n  // }, [enteredNameIsValid]);\n\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  }\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailTouched(true);\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmail) {\n      return;\n    }\n    console.log(enteredName);\n    console.log(enteredEmail);\n    resetnameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  }\n\n  const nameInputClasses = nameInputHasError ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses} >\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text' id='name'\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className={emailInputClasses} >\n        <label htmlFor='email'>Your E-maeil</label>\n        <input\n          type='text' id='email'\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid} type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}